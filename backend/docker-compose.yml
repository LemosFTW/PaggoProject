version: '3.8'

services:
  api:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: paggo-api
    ports:
      - "3000:3000"
    environment:
      DATABASE_URL: postgresql://postgres:postgres@db:5432/postgres 
      PORT: 3000
      NODE_ENV: production
      JWT_SECRET: UUID
      JWT_EXPIRES_IN: 3600
      JWT_REFRESH_SECRET: UUID
      JWT_REFRESH_EXPIRES_IN: 604800
      AWS_ACCESS_KEY_ID: UUID
      AWS_SECRET_ACCESS_KEY: UUID
      AWS_REGION: UUID
      AWS_BUCKET_NAME: UUID
      GEMINI_API_KEY : UUID
    depends_on:
      - db
    command: >
      sh -c "echo 'Waiting for database...' &&
             sleep 5 && # Pequena pausa para garantir que o DB esteja pronto
             echo 'Running migrations...' &&
             npx prisma migrate deploy && 
             echo 'Starting application...' &&
             npx prisma db seed
             node dist/src/main" # Ajuste para dist/main se o build for corrigido
    restart: unless-stopped

  db:
    image: postgres:17-alpine 
    container_name: paggo-db
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: postgres
    ports:
      - "5433:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
    restart: always

volumes:
  pgdata: